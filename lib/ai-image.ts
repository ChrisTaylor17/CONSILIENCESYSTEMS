import OpenAI from 'openai'

const openai = new OpenAI({
  apiKey: process.env.OPENAI_API_KEY,
})

export async function generateNFTImage(prompt: string) {
  try {
    const response = await openai.images.generate({
      model: "dall-e-3",
      prompt: `Create a unique NFT artwork: ${prompt}. High quality, digital art style, vibrant colors, suitable for blockchain collection.`,
      n: 1,
      size: "1024x1024",
      quality: "standard",
    })

    return {
      success: true,
      imageUrl: response.data?.[0]?.url,
      revisedPrompt: response.data?.[0]?.revised_prompt
    }
  } catch (error) {
    console.error('AI image generation error:', error)
    return {
      success: false,
      error: error instanceof Error ? error.message : 'Image generation failed'
    }
  }
}

export async function generateNFTMetadata(name: string, description: string, imageUrl: string) {
  return {
    name,
    description,
    image: imageUrl,
    attributes: [
      { trait_type: "Generated By", value: "CONSILIENCE AI" },
      { trait_type: "Creation Date", value: new Date().toISOString().split('T')[0] },
      { trait_type: "Rarity", value: Math.random() > 0.7 ? "Rare" : "Common" }
    ],
    external_url: "https://consilience.systems",
    collection: {
      name: "CONSILIENCE Collection",
      family: "CONSILIENCE"
    }
  }
}